# Drop and create database before running this file
test_name: No users found
stages:
  - name: Returns a 404 when GET /users is requested and there are no users in the db
    request:
      url: http://127.0.0.1:5000/user
      method: GET
    response:
      status_code: 404
      body:
        msg: No users in the database

---
test_name: Successfully handle POST user
stages:
  - name: Returns a 201 and a new user object when a valid user is requested
    request:
      url: http://127.0.0.1:5000/user
      json:
        first_name: Eamon
        surname: S
        email: eamon@s.com
        username: eamon
        sensor_id: abc123
        user_id: hfej4ojo3j53353ni3nir3
      method: POST
      headers:
        content-type: application/json
    response:
      status_code: 201
      body:
        first_name: Eamon
        surname: S
        email: eamon@s.com
        username: eamon
        sensor_id: abc123
        user_id: hfej4ojo3j53353ni3nir3

---
test_name: Reject bad POST user request
stages:
  - name: Returns a 400 when a request is sent without one of the required fields
    request:
      url: http://127.0.0.1:5000/user
      json:
        first_name: Eamon
        surname: S
        email: somethingelse@something.com
        username: noteamon
        sensor_id: xyz321
      method: POST
      headers:
        content-type: application/json
    response:
      status_code: 400
      body:
        msg: Info missing from post user request

---
test_name: Reject non-unique POST user request
stages:
  - name: Returns a 201 and a new user object when a valid user is requested
    request:
      url: http://127.0.0.1:5000/user
      json:
        first_name: Eamon
        surname: S
        email: eamon@s.com
        username: eamon
        sensor_id: abc123
        user_id: hfej4ojo3j53353ni3nir3
      method: POST
      headers:
        content-type: application/json
    response:
      status_code: 400
      body:
        msg: Username, Sensor ID, Email or User_ID already in use

---
test_name: Provide a list of all users in the db
stages:
  - name: Returns a 200 and an array of all users in the database
    request:
      url: http://127.0.0.1:5000/user
      method: GET
    response:
      status_code: 200
      body:
        [
          {
            'email': 'eamon@s.com',
            'first_name': 'Eamon',
            'sensor_id': 'abc123',
            'surname': 'S',
            'user_id': 'hfej4ojo3j53353ni3nir3',
            'username': 'eamon',
          },
        ]
